rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Fonction helper pour vérifier si l'utilisateur est master
    function isMasterUser() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.email == 'master@pizzeria.com';
    }
    // Règles pour les utilisateurs
    match /users/{userId} {
      // Permettre à l'utilisateur de lire/écrire ses propres données
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Permettre aux admins et pizzerias de lire tous les utilisateurs
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'pizzeria'];

      // Permettre à tous les utilisateurs connectés de chercher et lire le compte master
      allow list: if request.auth != null;
      allow get: if request.auth != null &&
        resource.data.email == 'master@pizzeria.com';
    }
    
    // Règles pour les pizzas
    match /pizzas/{pizzaId} {
      // Lecture : tout le monde peut lire (pour query avec where)
      allow read: if true;

      // Création : utilisateur authentifié avec userId obligatoire
      // Permet de créer des pizzas normales ET des overrides
      allow create: if request.auth != null &&
        request.resource.data.userId != null;

      // Modification/Suppression :
      // 1. Propriétaire de la pizza (overrides et pizzas persos)
      // 2. Master pour ses propres pizzas
      allow update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        (resource.data.userId == 'master' && isMasterUser())
      );
    }

    // Règles pour les extras
    match /extras/{extraId} {
      // Lecture : tout le monde peut lire
      allow read: if true;

      // Création : utilisateur authentifié avec userId obligatoire
      allow create: if request.auth != null &&
        request.resource.data.userId != null;

      // Modification/Suppression : propriétaire OU master pour les extras master
      allow update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        (resource.data.userId == 'master' && isMasterUser())
      );
    }

    // Règles pour les catégories
    match /categories/{categoryId} {
      // Lecture : tout le monde peut lire (pour query avec where)
      allow read: if true;

      // Création : utilisateur authentifié avec userId obligatoire
      // Permet de créer des catégories normales ET des overrides
      allow create: if request.auth != null &&
        request.resource.data.userId != null;

      // Modification/Suppression :
      // 1. Propriétaire de la catégorie (overrides et catégories persos)
      // 2. Master pour ses propres catégories
      allow update, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        (resource.data.userId == 'master' && isMasterUser())
      );
    }
    
    // Règles pour les commandes
    match /orders/{orderId} {
      // Tout utilisateur authentifié peut lire les commandes
      allow read: if request.auth != null;

      // Tout utilisateur authentifié peut créer une commande
      allow create: if request.auth != null;

      // Tout utilisateur authentifié peut modifier les commandes
      allow update: if request.auth != null;

      // Tout utilisateur authentifié peut supprimer des commandes
      allow delete: if request.auth != null;
    }
    
    // Règles pour les paramètres de la pizzeria
    match /settings/{settingId} {
      // Tout le monde peut lire les paramètres (pour afficher les infos de contact)
      allow read: if true;
      
      // Seuls les admins et pizzerias peuvent modifier les paramètres
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'pizzeria'];
    }
  }
}